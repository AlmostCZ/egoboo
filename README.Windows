Guide modified and updated by Zefz ( 21.03.08 )
For more help and support: http://egoboo.sourceforge.net/forum/

Welcome to the newest guide of how to compile Egoboo using Microsoft Visual Studio! You will need the following things to start with:

- Source code of Egoboo to compile (The source code should be included with the newer versions of Egoboo you download)! (Download it at http://sourceforge.net/projects/egoboo or get the latest source on the SVN at https://egoboo.svn.sourceforge.net/svnroot/egoboo/trunk (Insturctions on how to download SVN is here: http://sourceforge.net/docs/E09)

- An appropriate windows-compatible C/C++ compiler. Several different project files are included with this distribution, and the appropriate compiler is listed alongside:

	- egoboo_vs6.dsw = Visual Studio 6 Workspace
	- egoboo_vs7.sln = Visual Studio 2003 Solution
	- egoboo_vs8.sln = Visual Studio 2005 Solution
	- egoboo_vs9.sln = Visual Studio 2008 Solution
	- egoboo_vs10.sln = Visual Studio 2010 Solution
	- egoboo.workspace = Code::Blocks workspace several versions of VS

Microsoft Visual Studio will read and update project files generated by quite old versions, but use the "latest" version of the project file possible.

At this time (August 2011), Microsoft is offereing free versions of these compilers via the Visual Studio Express program. These are generally older versions of the compilers, which are freely available for any use, but are slightly crippled compared to the full versions. Search the microsoft download center to determine what express versions are available to you.

There are also several good free compilers that are compatible with Code::Blocks, including the Intel compiler.

- The latest version of the Windows SDK. This is often shipped with Visual Studio Express, but if not, download the latest version from microsoft.com. The latest version of the Windows SDK that has been compiled against is version 10, which is compatible with Windows Vista.

- The recent SDL development packages:
	- SDL devel package (http://www.libsdl.org/)
	- SDL mixer devel package (http://www.libsdl.org/projects/SDL_mixer/)
	- SDL ttf devel package (http://www.libsdl.org/projects/SDL_ttf/)
	- SDL image devel package (http://www.libsdl.org/projects/SDL_image/)

The filenames of these packages look something like this: SDL_image-devel-1.2.6-VC8.zip 
(This case being SDL_image version 1.2.6)

Step 1:

Install yor compiler and integrated development environment (Visual Studio Express 2010, for instance). 

There are several ways to get your compiler to recognize the various include files, libraries, and dlls that will be necessary to run egoboo, none of them simple.

One way is to copy all of the files into the correct sub-directories of your compiler. For the Visual Studio compilers, this would mean looking the files for each dependency and copying the files in the include include directory to "C:\Program Files\{Whatever Visual Studio Compiler You Have}\VC\include", copying the .lib files into "C:\Program Files\{Whatever Visual Studio Compiler You Have}\VC\lib", and all the .dlls to "C:\Program Files\{Whatever Visual Studio Compiler You Have}\VC\bin". This is a once-and-for-all fix, but if you plan on working on projects with similar names or which might have similar filenames, this is not the way to go.

Another way is to tell the compiler where to look for the files. On all versions of visual studio up to the 2010 version, this was accomplished by going to the Tools->Options... dialog and going down to the Projects->VC++ Directories tab, and storing the directories for your include files and library files in the tables on that property page. This is more flexible, but more technical. Somethig similar is available using Code::Blocks.

For Visual Studio 2010 and later, something similar is available, but we have opted to support the use of .props files which can be used to override the project settings. To support this, you will have to add various environment variables to point to the location of egoboo's various dependencies. These environment variables are

	- SDL_INCLUDE = the directory of SDL's include files
	- SDL_LIB     = the directory of SDL's library files
	- SDL_NAME    = the name of the SDL library (usually SDL.lib, but it could be different if you have a custom compile)

and similar for each of egoboo's dependencies. The full list is:

SDL_INCLUDE, SDL_LIB, SDL_NAME,
SDL_TTF_INCLUDE, SDL_TTF_LIB, SDL_TTF_NAME,
SDL_IMAGE_INCLUDE, SDL_IMAGE_LIB, SDL_IMAGE_NAME,
SDL_MIXER_INCLUDE, SDL_MIXER_LIB, SDL_MIXER_NAME,
ENET_INCLUDE, ENET_LIB, ENET_NAME,
PHYSFS_INCLUDE, PHYSFS_LIB, PHYSFS_NAME,
LUA_INCLUDE, LUA_LIB, LUA_NAME


Step 2: (still needs to be updated)

The Egoboo project file is in the source code folder that you downloaded from the game website or the SVN repository. It is the .sln file. Open version 9 for studio 2008 and version 8 for 2005 (Version 7 is for older ones). Open it up with Visual C++ 2005/2008. If everything goes right, all of the needed compile settings should be set for you Razz, but we are checking it, just to make sure. Now, you will see two folders on the left side called "enet" and "game". Right click "game". Go to "Linker" (Click the + button) and  elect Input. Go to Additional dependencies, double click it. A button like this: ... will appear on the right side, click it. 
You should have it like this:

enet.lib
shlwapi.lib
opengl32.lib
glu32.lib
ws2_32.lib
SHFolder.lib
Shell32.lib
SDL.lib
SDLmain.lib
SDL_ttf.lib
SDL_mixer.lib
SDL_image.lib
physfs.lib

for the lua integration, you need the lua 5.0 or better libraries. These should be the static link libraries.
lua5.1.lib
lualib5.1.lib

Once you made sure that these match, you can continue. (Note: they don't have to be exactly the same, but this is 
how I recommend you to have it). If the system did not find a library or expects a different filename, it will alert you.

Step 3:

Go to build -> build solution and there you go! Note: just remember about switching between debug mode and release 
mode (Batch build or debug build).

If you got any problems, don't hesitate to ask for help in the help section of the forums.

Good luck!